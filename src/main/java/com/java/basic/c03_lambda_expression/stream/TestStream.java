package com.java.basic.c03_lambda_expression.stream;

/**
 * 1、为什么有Stream API
 * Stream API可以极大提高Java程序员的生产力，让程序员写出高效率、干净、简洁的代码。
 * Stream 是Java8 中处理集合等的关键抽象概念，它可以指定你希望对集合进行的操作，可以执行非常复杂的查找、过滤和映射数据等操作。
 * 使用Stream API 对集合数据进行操作，就类似于使用SQL执行的数据库查询。
 *
 * 大多数情况下，数据都是存储到数据库中，对于数据库中的数据的查找、过滤...操作是用SQL语句。
 * 但是现在，很多的数据缓存到内存中(No-SQL),那么这个时候需要对数据进行查找、过滤...操作就可以使用Stream API。
 * 内存：容器集合，数组等
 *
 * 2、Stream的特点
 * Stream是数据渠道，用于操作数据源（集合、数组等）所生成的元素序列。
 * "集合讲的是数据，负责存储数据，Stream流讲的是计算，负责处理数据！"
 *
 *      1）Stream本身不负责存储数据，只负责处理数据
 *      2）Stream不会改变源对象。每次处理都会返回一个持有结果的新Stream。
 *          类似SQL语句对数据库的查询，不会改变数据库中的数据，只会返回一个结果集。
 *      3）Stream 操作是延迟执行的。这意味着他们会等到需要结果的时候才执行。
 *
 * 3、Stream操作的三个步骤
 *      第一步：创建stream
 *              建立一个Stream数据渠道，即指定数据源，即数据从哪里来
 *      第二步：中间操作
 *              处理数据
 *              中间操作可以0~n步
 *      第三步：终结操作
 *              取结果
 */
public class TestStream {
}
